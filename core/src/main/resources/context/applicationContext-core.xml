<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.es.core"/>

    <bean id="exceptionLoggingAspect" class="com.es.core.aspect.ExceptionLoggingAspect"/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.user}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="jdbcTemplate"/>
    </bean>

    <jdbc:initialize-database enabled="${db.insertSchema}" data-source="dataSource">
        <jdbc:script location="classpath:db/schema.sql"/>
    </jdbc:initialize-database>

    <bean id="phoneRowMapper" class="com.es.core.dao.phone.PhoneRowMapper"/>
    <bean id="colorRowMapper" class="com.es.core.dao.color.ColorRowMapper"/>
    <bean id="stockRowMapper" class="com.es.core.dao.stock.StockRowMapper"/>
    <bean id="orderItemRowMapper" class="com.es.core.dao.orderItem.OrderItemRowMapper"/>
    <bean id="orderRowMapper" class="com.es.core.dao.order.OrderRowMapper"/>

    <bean id="jdbcPhoneDao" class="com.es.core.dao.phone.JdbcPhoneDao"/>
    <bean id="jdbcColorDao" class="com.es.core.dao.color.JdbcColorDao"/>
    <bean id="jdbcStockDao" class="com.es.core.dao.stock.JdbcStockDao"/>
    <bean id="jdbcOrderItemDao" class="com.es.core.dao.orderItem.JdbcOrderItemDao"/>
    <bean id="jdbcOrderDao" class="com.es.core.dao.order.JdbcOrderDao"/>

    <bean id="phoneServiceImpl" class="com.es.core.service.phone.PhoneServiceImpl"/>
    <bean id="httpSessionCartService" class="com.es.core.service.cart.HttpSessionCartService"
          scope="session" destroy-method="cleanupSessionAndReservedItems">
        <aop:scoped-proxy proxy-target-class="false"/>
    </bean>
    <bean id="stockServiceImpl" class="com.es.core.service.stock.StockServiceImpl"/>
    <bean id="orderServiceImpl" class="com.es.core.service.order.OrderServiceImpl"/>

</beans>